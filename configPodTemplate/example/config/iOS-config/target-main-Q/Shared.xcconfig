//
// Target-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 2023/12/27
// https://buildsettingextractor.com
//

// Always Embed Swift Standard Libraries
//
// Always embed the Swift standard libraries in the target's products, even if the target
// does not contain any Swift code.  For example, this should be enabled if the target is
// embedding other products which contain Swift, or if it is a test target which does not
// contain Swift but which is testing a product which does.  This setting only applies to
// wrapped products, not to standalone binary products.

ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES



// Primary App Icon Set Name
//
// Name of an app icon set for the target's default app icon. The contents will be merged
// into the `Info.plist`.

ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon



// Code Signing Entitlements
//
// The path to a file specifying code-signing entitlements.
//CODE_SIGN_ENTITLEMENTS =



// Code Signing Identity
//
// The name, also known as the *common name*, of a valid code-signing certificate in a
// keychain within your keychain path. A missing or invalid certificate will cause a
// build error.


// Info.plist File
//
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property
// List](https://developer.apple.com/documentation/bundleresources/information_property_list).

INFOPLIST_FILE = YKRPC_POD_NAME_Example/YKRPC_POD_NAME_Example/Info.plist



// Runpath Search Paths
//
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/Frameworks



// Module Identifier
//
// This is the identifier of the kernel module listed in the generated stub. This is only
// used when building kernel extensions.

MODULE_NAME = YKRPC_POD_NAME_Example



// Product Bundle Identifier
//
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`).
//
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleIdentifier](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleidentifier)
// key in the `Info.plist` file to the value of this build setting.

PRODUCT_BUNDLE_IDENTIFIER = com.YKRPC_CLASS_PREFIX.YKRPC_POD_NAME


// Provisioning Profile
//
// Must contain a profile name (or UUID). A missing or invalid profile will cause a build
// error. Use in conjunction with [DEVELOPMENT_TEAM] to fully specify provisioning
// profile.

PROVISIONING_PROFILE_SPECIFIER =



// Objective-C Bridging Header
//
// Path to the header defining the Objective-C interfaces to be exposed in Swift.

SWIFT_OBJC_BRIDGING_HEADER = TargetMain/YKRPC_POD_NAME_Example-Bridging-Header.h



SWIFT_SWIFT3_OBJC_INFERENCE = Default
